import { FaceDetection } from 'face-api.js/build/commonjs/classes/FaceDetection';
import { TNetInput } from 'face-api.js/build/commonjs/dom';
import { ComposableTask } from 'face-api.js/build/commonjs/globalApi/ComposableTask';
import { DetectAllFaceLandmarksTask, DetectSingleFaceLandmarksTask } from 'face-api.js/build/commonjs/globalApi/DetectFaceLandmarksTasks';
import { PredictAllAgeAndGenderTask, PredictSingleAgeAndGenderTask } from 'face-api.js/build/commonjs/globalApi/PredictAgeAndGenderTask';
import { PredictAllFaceExpressionsTask, PredictSingleFaceExpressionsTask } from 'face-api.js/build/commonjs/globalApi/PredictFaceExpressionsTask';
import { FaceDetectionOptions } from 'face-api.js/build/commonjs/globalApi/types';
export declare class DetectFacesTaskBase<TReturn> extends ComposableTask<TReturn> {
    protected input: TNetInput;
    protected options: FaceDetectionOptions;
    constructor(input: TNetInput, options?: FaceDetectionOptions);
}
export declare class DetectAllFacesTask extends DetectFacesTaskBase<FaceDetection[]> {
    run(): Promise<FaceDetection[]>;
    private runAndExtendWithFaceDetections;
    withFaceLandmarks(useTinyLandmarkNet?: boolean): DetectAllFaceLandmarksTask<{
        detection: FaceDetection;
    }>;
    withFaceExpressions(): PredictAllFaceExpressionsTask<{
        detection: FaceDetection;
    }>;
    withAgeAndGender(): PredictAllAgeAndGenderTask<{
        detection: FaceDetection;
    }>;
}
export declare class DetectSingleFaceTask extends DetectFacesTaskBase<FaceDetection | undefined> {
    run(): Promise<FaceDetection | undefined>;
    private runAndExtendWithFaceDetection;
    withFaceLandmarks(useTinyLandmarkNet?: boolean): DetectSingleFaceLandmarksTask<{
        detection: FaceDetection;
    }>;
    withFaceExpressions(): PredictSingleFaceExpressionsTask<{
        detection: FaceDetection;
    }>;
    withAgeAndGender(): PredictSingleAgeAndGenderTask<{
        detection: FaceDetection;
    }>;
}
